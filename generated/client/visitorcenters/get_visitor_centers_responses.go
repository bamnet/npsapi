// Code generated by go-swagger; DO NOT EDIT.

package visitorcenters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bamnet/npsapi/generated/models"
)

// GetVisitorCentersReader is a Reader for the GetVisitorCenters structure.
type GetVisitorCentersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVisitorCentersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVisitorCentersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVisitorCentersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVisitorCentersOK creates a GetVisitorCentersOK with default headers values
func NewGetVisitorCentersOK() *GetVisitorCentersOK {
	return &GetVisitorCentersOK{}
}

/*GetVisitorCentersOK handles this case with default header values.

successful operation
*/
type GetVisitorCentersOK struct {
	Payload []*models.VisitorCenter
}

func (o *GetVisitorCentersOK) Error() string {
	return fmt.Sprintf("[GET /visitorcenters][%d] getVisitorCentersOK  %+v", 200, o.Payload)
}

func (o *GetVisitorCentersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVisitorCentersBadRequest creates a GetVisitorCentersBadRequest with default headers values
func NewGetVisitorCentersBadRequest() *GetVisitorCentersBadRequest {
	return &GetVisitorCentersBadRequest{}
}

/*GetVisitorCentersBadRequest handles this case with default header values.

Invalid status value
*/
type GetVisitorCentersBadRequest struct {
}

func (o *GetVisitorCentersBadRequest) Error() string {
	return fmt.Sprintf("[GET /visitorcenters][%d] getVisitorCentersBadRequest ", 400)
}

func (o *GetVisitorCentersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
