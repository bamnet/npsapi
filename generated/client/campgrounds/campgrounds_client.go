// Code generated by go-swagger; DO NOT EDIT.

package campgrounds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new campgrounds API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for campgrounds API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetCampgrounds campgrounds data includes location contact operating hours site amenities fee and accessibility information for campgrounds in national parks at least one representative photo of each campground is available some parks have multiple campgrounds of a variety of types eg developed or primitive others have none
*/
func (a *Client) GetCampgrounds(params *GetCampgroundsParams, authInfo runtime.ClientAuthInfoWriter) (*GetCampgroundsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCampgroundsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getCampgrounds",
		Method:             "GET",
		PathPattern:        "/campgrounds",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCampgroundsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCampgroundsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCampgrounds: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
