// Code generated by go-swagger; DO NOT EDIT.

package parks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bamnet/npsapi/generated/models"
)

// GetParkReader is a Reader for the GetPark structure.
type GetParkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetParkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetParkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetParkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetParkOK creates a GetParkOK with default headers values
func NewGetParkOK() *GetParkOK {
	return &GetParkOK{}
}

/*GetParkOK handles this case with default header values.

successful operation
*/
type GetParkOK struct {
	Payload []*models.Park
}

func (o *GetParkOK) Error() string {
	return fmt.Sprintf("[GET /parks][%d] getParkOK  %+v", 200, o.Payload)
}

func (o *GetParkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetParkBadRequest creates a GetParkBadRequest with default headers values
func NewGetParkBadRequest() *GetParkBadRequest {
	return &GetParkBadRequest{}
}

/*GetParkBadRequest handles this case with default header values.

Invalid status value
*/
type GetParkBadRequest struct {
}

func (o *GetParkBadRequest) Error() string {
	return fmt.Sprintf("[GET /parks][%d] getParkBadRequest ", 400)
}

func (o *GetParkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
