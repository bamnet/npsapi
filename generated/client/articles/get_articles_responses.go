// Code generated by go-swagger; DO NOT EDIT.

package articles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bamnet/npsapi/generated/models"
)

// GetArticlesReader is a Reader for the GetArticles structure.
type GetArticlesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArticlesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArticlesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArticlesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetArticlesOK creates a GetArticlesOK with default headers values
func NewGetArticlesOK() *GetArticlesOK {
	return &GetArticlesOK{}
}

/*GetArticlesOK handles this case with default header values.

successful operation
*/
type GetArticlesOK struct {
	Payload []*models.Article
}

func (o *GetArticlesOK) Error() string {
	return fmt.Sprintf("[GET /articles][%d] getArticlesOK  %+v", 200, o.Payload)
}

func (o *GetArticlesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArticlesBadRequest creates a GetArticlesBadRequest with default headers values
func NewGetArticlesBadRequest() *GetArticlesBadRequest {
	return &GetArticlesBadRequest{}
}

/*GetArticlesBadRequest handles this case with default header values.

Invalid status value
*/
type GetArticlesBadRequest struct {
}

func (o *GetArticlesBadRequest) Error() string {
	return fmt.Sprintf("[GET /articles][%d] getArticlesBadRequest ", 400)
}

func (o *GetArticlesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
